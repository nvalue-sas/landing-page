---
const services = [
  {
    title: "Custom Enterprise Software",
    description:
      "Tailored solutions designed to address your specific business challenges and optimize your operations.",
    icon: "laptop-code",
    color: "primary",
  },
  {
    title: "Legacy System Modernization",
    description:
      "Transform outdated systems into modern, efficient applications without disrupting your business processes.",
    icon: "arrows-rotate",
    color: "secondary",
  },
  {
    title: "Government & Public Sector Solutions",
    description:
      "Secure, compliant software solutions designed specifically for government agencies and public institutions.",
    icon: "building-columns",
    color: "accent",
  },
  {
    title: "Business Process Automation",
    description:
      "Streamline your operations with intelligent automation that reduces costs and improves efficiency.",
    icon: "gears",
    color: "primary",
  },
  {
    title: "Integration Services",
    description:
      "Seamlessly connect your existing systems and third-party applications for improved data flow.",
    icon: "link",
    color: "secondary",
  },
  {
    title: "Data Analytics & Business Intelligence",
    description:
      "Transform your data into actionable insights with powerful analytics and visualization tools.",
    icon: "chart-line",
    color: "accent",
  },
];

// Helper function to get the icon SVG based on the icon name
const getIconSvg = (iconName: string) => {
  switch (iconName) {
    case "laptop-code":
      return `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M6 20.25h12m-7.5-3v3m3-3v3m-10.125-3h17.25c.621 0 1.125-.504 1.125-1.125V4.875c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125z" />
              </svg>`;
    case "arrows-rotate":
      return `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0 3.181 3.183a8.25 8.25 0 0 0 13.803-3.7M4.031 9.865a8.25 8.25 0 0 1 13.803-3.7l3.181 3.182m0-4.991v4.99" />
              </svg>`;
    case "building-columns":
      return `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 21v-8.25M15.75 21v-8.25M8.25 21v-8.25M3 9l9-6 9 6m-1.5 12V10.332A48.36 48.36 0 0 0 12 9.75c-2.551 0-5.056.2-7.5.582V21M3 21h18M12 6.75h.008v.008H12V6.75Z" />
              </svg>`;
    case "gears":
      return `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12a7.5 7.5 0 0 0 15 0m-15 0a7.5 7.5 0 1 1 15 0m-15 0H3m16.5 0H21m-1.5 0H12m-8.457 3.077 1.41-.513m14.095-5.13 1.41-.513M5.106 17.785l1.15-.964m11.49-9.642 1.149-.964M7.501 19.795l.75-1.3m7.5-12.99.75-1.3m-6.063 16.658.26-1.477m2.605-14.772.26-1.477m0 17.726-.26-1.477M10.698 4.614l-.26-1.477M16.5 19.794l-.75-1.299M7.5 4.205 12 12m6.894 5.785-1.149-.964M6.256 7.178l-1.15-.964m15.352 8.864-1.41-.513M4.954 9.435l-1.41-.514M12.002 12l-3.75 6.495" />
              </svg>`;
    case "link":
      return `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M13.19 8.688a4.5 4.5 0 0 1 1.242 7.244l-4.5 4.5a4.5 4.5 0 0 1-6.364-6.364l1.757-1.757m13.35-.622 1.757-1.757a4.5 4.5 0 0 0-6.364-6.364l-4.5 4.5a4.5 4.5 0 0 0 1.242 7.244" />
              </svg>`;
    case "chart-line":
      return `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 3v11.25A2.25 2.25 0 0 0 6 16.5h2.25M3.75 3h-1.5m1.5 0h16.5m0 0h1.5m-1.5 0v11.25A2.25 2.25 0 0 1 18 16.5h-2.25m-7.5 0h7.5m-7.5 0-1 3m8.5-3 1 3m0 0 .5 1.5m-.5-1.5h-9.5m0 0-.5 1.5m.75-9 3-3 2.148 2.148A12.061 12.061 0 0 1 16.5 7.605" />
              </svg>`;
    default:
      return `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M6 13.5V3.75m0 9.75a1.5 1.5 0 0 1 0 3m0-3a1.5 1.5 0 0 0 0 3m0 3.75V16.5m12-3V3.75m0 9.75a1.5 1.5 0 0 1 0 3m0-3a1.5 1.5 0 0 0 0 3m0 3.75V16.5m-6-9V3.75m0 3.75a1.5 1.5 0 0 1 0 3m0-3a1.5 1.5 0 0 0 0 3m0 9.75V10.5" />
              </svg>`;
  }
};

// Helper function to get the color class based on the color name
const getColorClass = (colorName: string) => {
  switch (colorName) {
    case "primary":
      return "bg-primary-400/10 text-primary-600 border-primary-300/60 dark:bg-transparent dark:border-secondary-100/20";
    case "secondary":
      return "bg-teal-400/10 text-teal-600 border-teal-300/60 dark:bg-transparent dark:border-secondary-100/20";
    case "accent":
      return "bg-pink-400/10 text-pink-600 border-pink-300/60 dark:bg-transparent dark:border-secondary-100/20";
    default:
      return "bg-gray-50 text-gray-600 border-gray-100";
  }
};
---

<section id="services" class="py-10">
  <div
    class="dark:text-secondary-200 fter:pointer-events-none container mx-auto max-w-7xl bg-[image:radial-gradient(var(--pattern-fg)_1px,_transparent_0)] bg-[size:10px_10px] bg-fixed px-6 py-10 text-slate-700 [--pattern-fg:var(--color-gray-950)]/5 after:rounded-lg after:inset-ring-gray-950/5 dark:[--pattern-fg:var(--color-white)]/10 dark:after:inset-ring-white/10"
  >
    <div class="mx-auto mb-16 max-w-3xl text-center">
      <h2 class="animate-on-scroll mb-4 text-3xl font-bold md:text-4xl">
        Our Enterprise Services
      </h2>
      <div class="bg-primary-500 mx-auto mb-6 h-1 w-20"></div>
      <p
        class="dark:text-secondary-200 animate-on-scroll text-lg text-slate-700"
      >
        We deliver tailored software solutions that address complex business
        challenges and drive digital transformation.
      </p>
    </div>

    <div class="grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-3">
      {
        services.map((service, index) => (
          <div
            class={`animate-on-scroll rounded-lg border p-6 ${getColorClass(service.color)}`}
            style={`animation-delay: ${index * 100}ms`}
          >
            <div class="mb-4">
              <div
                class={`flex h-12 w-12 items-center justify-center rounded-lg ${service.color === "primary" ? "bg-primary-400/10" : service.color === "secondary" ? "bg-teal-400/10" : "bg-pink-400/10"}`}
              >
                <Fragment set:html={getIconSvg(service.icon)} />
              </div>
            </div>
            <h3 class="mb-3 text-xl font-semibold dark:text-white">
              {service.title}
            </h3>
            <p class="text-slate-700 dark:text-gray-400">
              {service.description}
            </p>
          </div>
        ))
      }
    </div>
  </div>
</section>
